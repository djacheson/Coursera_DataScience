a=c(1,2,3,4)
b=c(5,6,7,8)
c(a,b)
?c
t[[1]] = c(1,2,3,4)
t=list()
t[[1]] = c(1,2,3,4)
t[[2]] = c(5,6,7,8)
rbind(t)
c(t)
m
c(m,m2)
rbind(m,m2)
1.01^3 - 0.99^3
1.01^4
(2*1.01^4+2) - (2*0.99^4+2)
0.160016/0.02
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "0903dfca2d2ea1748e59b42ab748b5c4de206b4b")
?oauth_app
myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("Coursera_DataScience", "0903dfca2d2ea1748e59b42ab748b5c4de206b4b")
myapp <- oauth_app("Coursera_DataScience", "0903dfca2d2ea1748e59b42ab748b5c4de206b4b",NULL)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpub")
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("Coursera_DataScience", "0903dfca2d2ea1748e59b42ab748b5c4de206b4b",NULL)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
?oauth2.0_token
myapp <- oauth_app("dj_test", "e5808e13d444208f453bf513e9f754f8333eda02",NULL)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
?oauth_app
myapp <- oauth_app("dj_test", "djacheson","e5808e13d444208f453bf513e9f754f8333eda02")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("dj_test", "713d6dd9da4469a070ab","8145eb9de9701d37816402132f26c6a2970c4f6d")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
content(req)
install.packages("jsonlite")
library(jsonlite)
content(req)
names(req)
names(req$times)
names(req$times$namelookup)
req$times$namelookup
req$times
names(req)
names(req$content)
names(req$content)
req$content
req
names(req)
?content
content(req)
req$headers
names(req$headers)
names(req$headers$date)
req$headers$date
?jsonlite
test <- prettify(req)
test
rm(test)
test<-fromJSON(req)
names(req)
names(req$content)
req$content
content(req)
test <- content(req)
names(test)
test[[1]]
test <- unlist(test)
names(test)
test <- content(req)
test[[1]]
?unlist
test2 <- unlist(test,recursive-F)
test2 <- unlist(test,recursive=F)
names(test2)
test <- fromJSON(req)
test <- fromJSON(toJSON(req))
test <- fromJSON(toJSON(content(req)))
names(test)
test$id
names(test)
test$name
names(test)
test$created_at[[4]]
install.packages("sqldf")
library(sqldf)
acs <- read.csv(url)
url <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
library(RCurl)
url <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
url <- getURL("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acs <- read.csv(url)
url <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acs <- read.csv(text=url)
names(acs)
test <- sqldf("select pwgtp1 from acs where AGEP < 50")
names(test)
test <- sqldf("select distinct AGEP from acs")
test2<- unique(acs$AGEP)
test2 ==  test
install.packages(XML)
install.packages("XML")
library(XML)
test <- htmlTreeParse(url,useInternal=T)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
test <- htmlTreeParse(url)
test <- htmlTreeParse(url,useInternal=T)
nchar(test[[1]]
)
names(test)
test
test[1]
test[2]
test[[2]]
test
test <- as.list(test)
str(test)
nchar(test)
test <- htmlParse(url,useInternal=T)
str(test)
test
as.character(test)
test
test[[1]]
test[1]
str(test)
test <- htmlParse(url)
test
xmlValue(test)
htmlValue(test)
test <- htmlTreeParse(url)
test
str(test)
test[[1]]
test[1]
names(test)
test$children
nchar(test$file[[1]])
nchar(test$file[[10]])
nchar(test$file)
nchar(test$children)
nchar(test$children[[1]])
test <- getURL(url)
test[[1]]
test[1]
test[[2]]
test <- getURLContent(url)
names(test)
test
test[[1]]
test[[2]]
test <- htmlTreeParse(url)
test[[1]]
length(test[[1]])
length(test[[1]][[1]])
names(test)
test$file[[10]]
test$[[1]][[100]]
test[[1]][[100]]
test[1]
test[2]
test[3]
test[3][1]
test <- getURL(url)
test <- as.character(test)
test[1]
test[2]
test <- htmlTreeParse(url)
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
test <- readLines(con)
close(con)
chars <- c(nchar(test[10]),nchar(test[20]),nchar(test[30]),nchar(test[100]))
chars
?read.table
con <- url(url)
test <- readLines(con)
close(con)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
con <- url(url)
test <- readLines(con)
close(con)
?data.frame
data <- data.frame(test)
test <- read.fwf(file=url)
test <- read.fwf(file=url,widths=c(5,5,5,5))
names(test)
test[[2]]
test[[3]]
test[[1,1]]
test[[1]][1]
test[[2]][1]
chars
?read.fwf
test <- read.fwf(file=url,widths=c(5,5,5,5),skip=4)
test[[1]]
test <- read.fwf(file=url,widths=c(14,13,13,13),skip=4)
test[[1]]
test[[2]]
test[[4]]
test <- read.fwf(file=url,widths=c(14,4,9,4,9,4,9),skip=4)
test[[7]]
test <- read.fwf(file=url,widths=c(14,4,10,4,10,4,10),skip=4)
test[[7]]
test <- read.fwf(file=url,widths=c(14,13,13,13),skip=4)
test[[4]]
?split
test <- read.fwf(file=url,widths=c(14,4,10,4,10,4,10),skip=4)
test[[2]]
test[[3]]
test <- read.fwf(file=url,widths=c(14,5,9,5,9,5,9),skip=4)
test[[3]]
test[[4]]
test[[5]]
test <- read.fwf(file=url,widths=c(14,5,9,4,10,4,10),skip=4)
test[[4]]
test[[5]]
test <- read.fwf(file=url,widths=c(14,13,13,13),skip=4)
test <- read.fwf(file=url,widths=c(14,7,4, 9,4, 9,4, 9,4),skip=4)
test[[2]]
test <- read.fwf(file=url,widths=c(15,4,10,4,10,4,10),skip=4)
test[[1]]
test[[2]]
test[[3]]
test[[4]]
test[[2]]
test[[3]]
test[[4]]
test <- read.fwf(file=url,widths=c(15,4,9,4,10,4,10),skip=4)
test[[4]]
test[[3]]
test[[5]]
test[[6]]
test[[5]]
test <- read.fwf(file=url,widths=c(15,4,9,4,9,4,9),skip=4)
test[[3]]
test[[4]]
test[[5]]
test[[6]]
sum(as.numeric(test[[4]]))
setwd("D:\\GitHub\\Coursera_DataScience\\Getting_and_Cleaning_Data\\UCI HAR Dataset")
X_train <- read.table(file=".\train\X_train.txt",sep=" ")
X_train <- read.table(file=".\\train\\X_train.txt",sep=" ")
library(data.table)
help(data.table)
?fread
test <- fread(file=".\\train\\X_train.txt",sep=" ")
test <- fread(input=".\\train\\X_train.txt",sep=" ")
test <- fread(input=".\\train\\X_train.txt",sep=" ",header=F)
X_train <- read.table(file=".\\train\\X_train.txt",sep=" ",header=F)
?read.table
X_train <- read.table(file=".\\train\\X_train.txt",sep=" ",header=F,check.names=F)
X_train <- read.table(file=".\\train\\X_train.txt",header=F)
X_test <- read.table(file=".\\train\\X_test.txt",header=F)
X_test <- read.table(file=".\\test\\X_test.txt",header=F)
Y_train <- read.table(file=".\\train\\y_train.txt",header=F)
Y_test <- read.table(file=".\\test\\y_test.txt",header=F)
subject_train <- read.table(file=".\train\subject_train.txt")
subject_train <- read.table(file="./train/subject_train.txt")
subject_test <- read.table(file="./test/subject_test.txt")
rm(acs)
rm(data)
features <- read.table(file="features.txt")
features[[1]]
names(features)
features[[2]]
features <- read.table(file="features.txt",col.names=c("featureNumber","featureName"))
names(features)
require(stringr)
?str_replace
features$featureName <- str_replace(features$featureName,"()","")
features$featureName
features$featureName <- str_replace(features$featureName,"-","_")
features$featureName
features$featureName <- str_replace(as.character(features$featureName),"()","")
features$featureName
features$featureName <- str_replace_all(features$featureName,"()","")
features$featureName
test <- X_train
names(test) <- features$featureName
names(test)
str_detect(features$featureName,"mean")
names(Y_train) <- features$featureName
names(X_test) <- features$featureName
subject_train <- read.table(file="./train/subject_train.txt",colnames<-"subject")
subject_train <- read.table(file="./train/subject_train.txt",col.names<-"subject")
subject_train <- read.table(file="./train/subject_train.txt",col.names <- c("subject"))
subject_train <- read.table(file="./train/subject_train.txt", header=F, col.names <- c("subject"))
subject_train <- read.table(file="./train/subject_train.txt")
names(subject_train) <- "subject"
subject_test <- read.table(file="./test/subject_test.txt")
names(subject_test) <- "subject"
Y_train <- read.table(file=".\\train\\y_train.txt",header=F)
Y_test <- read.table(file=".\\test\\y_test.txt",header=F)
names(Y_train) <- "Activity"
names(Y_test) <- "Activity"
meanBool <- str_detect(features$featureName,"[mean,std]")
meanBool
meanBool <- str_find_all(features$featureName,"[mean,std]")
meanBool <- str_find_all(features$featureName,"mean")
meanBool <- str_detect(features$featureName,"mean")
meanBool
stdBool <- str_detect(features$featureName,"std")
stdBool
test <- meanBool + stdBool
test
str(meanBool)
test <- meanBool | stdBool
test
test[1:10]
test <- X_train[mean_stdBool]
mean_stdBool <- meanBool | stdBool
test <- X_train[mean_stdBool]
names(test)
names(X_train) <- features$featureName
names(X_test) <- features$featureName
test <- X_train
test <- X_train[mean_stdBool]
names(test)
meanBool <- str_detect(features$featureName,"mean()")
stdBool <- str_detect(features$featureName,"std()")
mean_stdBool <- meanBool | stdBool
test <- X_train[mean_stdBool]
names(test)
meanBool <- str_detect(features$featureName,"mean()")
stdBool <- str_detect(features$featureName,"std()")
mean_stdBool <- meanBool | stdBool
names(test)
test <- X_train[mean_stdBool]
names(features$featureName)
labels <- read.table(file="activity_labels.txt",col.names=c("activity_Number","activity_Label"))
labels
labels <- read.table(file="activity_labels.txt",col.names=c("Activity_Number","Activity_Label"))
names(Y_train) <- "Activity_Number"
names(Y_test) <- "Activity)NUmber"
test <- merge(Y_Train, labels)
Y_train <- read.table(file=".\\train\\y_train.txt",header=F)
Y_test <- read.table(file=".\\test\\y_test.txt",header=F)
names(Y_train) <- "Activity_Number"
names(Y_test) <- "Activity_NUmber"
test <- merge(Y_Train, labels)
?merge
test <- merge(Y_train, labels)
names(test)
test
train_All <- cbind(subject_train,X_train,Y_train)
test_All <- cbind(subject_test,X_test,Y_test)
names(trainAll)
names(train_All)
Y_train <- read.table(file=".\\train\\y_train.txt",header=F)
Y_test <- read.table(file=".\\test\\y_test.txt",header=F)
names(Y_train) <- "Activity_Number"
names(Y_test) <- "Activity_NUmber"
Y_train <- merge(Y_train, labels)
Y_test <- merge(Y_test, labels)
subject_train <- read.table(file="./train/subject_train.txt")
names(subject_train) <- "subject"
subject_test <- read.table(file="./test/subject_test.txt")
names(subject_test) <- "subject"
train_All <- cbind(subject_train,X_train,Y_train)
test_All <- cbind(subject_test,X_test,Y_test)
names(train_All)
data_Combined <- rbind(train_All,test_All)
names(train_All)
names(test_All)
Y_train <- read.table(file=".\\train\\y_train.txt",header=F)
Y_test <- read.table(file=".\\test\\y_test.txt",header=F)
names(Y_train) <- "Activity_Number"
names(Y_test) <- "Activity_Number"
Y_train <- merge(Y_train, labels)
Y_test <- merge(Y_test, labels)
train_All <- cbind(subject_train,X_train,Y_train)
test_All <- cbind(subject_test,X_test,Y_test)
data_Combined <- rbind(train_All,test_All)
test2 <- "test"
rm(c(test,test2))
rm(list=c("test","test2"))
require(plyr)
?ddply
?reshape
?ddply
test<- ddply(data_Combined,.c(subject,Activity_Label),.fun=mean)
test<- ddply(data_Combined,.(subject,Activity_Label),.fun=mean)
test
test<- melt(data_Combined,.(subject,Activity_Label),.fun=mean)
library(reshape2)
test<- melt(data_Combined,.(subject,Activity_Label),.fun=mean)
?melt
test<- melt(data_Combined,id.vars = c("subject","Activity_Label"),.fun=mean)
test<- melt(data_Combined,id.vars = c("subject","Activity_Label"))
test2 <- case(.~subject+Activity_Label,data=test,fun=mean)
test2 <- cas(.~subject+Activity_Label,data=test,fun=mean)
test2 <- cast(.~subject+Activity_Label,data=test,fun=mean)
?Cast
?cast
test2 <- cast(.~subject+Activity_Label,data=test,fun=mean)
cast
?cast
test2 <- dcast(.~subject+Activity_Label,data=test,fun=mean)
?melt
data_Combined <- data.table(rbind(train_All,test_All))
str(data_Combined)
View(test_All)
test <- data_Combined[,mean(.),by=c(subject,Activity_Label)]
rm(list=c("test","test2"))
test <- data_Combined[,lapply(mean),by="subject,Activity_Label"]
test <- data_Combined[,lapply(.mean),by="subject,Activity_Label"]
test <- data_Combined[,lapply(mean),by="subject,Activity_Label"]
test <- data_Combined[, lapply(.SD,mean), by="subject,Activity_Label"]
test
names(test)
test$Activity_Label
names(X_train)
meanBool <- str_detect(features$featureName,"mean()")
stdBool <- str_detect(features$featureName,"std()")
mean_stdBool <- meanBool | stdBool
X_train <- X_train[mean_stdBool]
X_test <- X_test[mean_stdBool]
Y_train <- read.table(file=".\\train\\y_train.txt",header=F)
Y_test <- read.table(file=".\\test\\y_test.txt",header=F)
names(Y_train) <- "Activity_Number"
names(Y_test) <- "Activity_Number"
Y_train <- merge(Y_train, labels)
Y_test <- merge(Y_test, labels)
#Read subject data
subject_train <- read.table(file="./train/subject_train.txt")
names(subject_train) <- "subject"
subject_test <- read.table(file="./test/subject_test.txt")
names(subject_test) <- "subject"
#Start combining the data
train_All <- cbind(subject_train,X_train,Y_train)
test_All <- cbind(subject_test,X_test,Y_test)
data_Combined <- data.table(rbind(train_All,test_All))
test <- data_Combined[, lapply(.SD,mean), by="subject,Activity_Label"]
tidy <- data_Combined[, lapply(.SD,mean), by="subject,Activity_Label"]
rm(list=ls())
run_Analysis <- function(
require(stringr)
setwd("D:\\GitHub\\Coursera_DataScience\\Getting_and_Cleaning_Data\\UCI HAR Dataset")
#Read Features
features <- read.table(file="features.txt",col.names=c("featureNumber","featureName"))
#Read Activity Labels
labels <- read.table(file="activity_labels.txt",col.names=c("Activity_Number","Activity_Label"))
#Read train, and then extract columns with mean and std in the name
X_train <- read.table(file=".\\train\\X_train.txt",header=F)
X_test <- read.table(file=".\\test\\X_test.txt",header=F)
run_Analysis <- function() {
require(stringr)
setwd("D:\\GitHub\\Coursera_DataScience\\Getting_and_Cleaning_Data\\UCI HAR Dataset")
#Read Features
features <- read.table(file="features.txt",col.names=c("featureNumber","featureName"))
#Read Activity Labels
labels <- read.table(file="activity_labels.txt",col.names=c("Activity_Number","Activity_Label"))
#Read train, and then extract columns with mean and std in the name
X_train <- read.table(file=".\\train\\X_train.txt",header=F)
X_test <- read.table(file=".\\test\\X_test.txt",header=F)
names(X_train) <- features$featureName
names(X_test) <- features$featureName
#mean and std booleans
meanBool <- str_detect(features$featureName,"mean()")
stdBool <- str_detect(features$featureName,"std()")
mean_stdBool <- meanBool | stdBool
X_train <- X_train[mean_stdBool]
X_test <- X_test[mean_stdBool]
#Read Y_data, which is the activity
#re-label the numbers as the activity
Y_train <- read.table(file=".\\train\\y_train.txt",header=F)
Y_test <- read.table(file=".\\test\\y_test.txt",header=F)
names(Y_train) <- "Activity_Number"
names(Y_test) <- "Activity_Number"
Y_train <- merge(Y_train, labels)
Y_test <- merge(Y_test, labels)
#Read subject data
subject_train <- read.table(file="./train/subject_train.txt")
names(subject_train) <- "subject"
subject_test <- read.table(file="./test/subject_test.txt")
names(subject_test) <- "subject"
#Start combining the data
train_All <- cbind(subject_train,X_train,Y_train)
test_All <- cbind(subject_test,X_test,Y_test)
data_Combined <- data.table(rbind(train_All,test_All))
return(data_Combined)
#Consider removing unnecessary variables here
#rm(list=c())
}
X_train <- fread(file=".\\train\\X_train.txt",header=F)
?fread
X_train <- fread(input=".\\train\\X_train.txt",header=F)
X_train <- fread(input=".\\train\\X_train.txt",header=F,skip=1)
X_train <- fread(input=".\\train\\X_train.txt",header=F,skip==1)
X_train <- fread(input=".\\train\\X_train.txt",header=F,skip>=1)
X_train <- fread(input=".\\train\\X_train.txt",skip>=1)
X_train <- fread(input=".\\train\\X_train.txt",header=F, sep=" ")
X_train <- fread(input=".\\train\\X_train.txt",header=F, sep=" ",skip>=1)
data <- run_Analysis
data <- run_Analysis()
makeTidy <- function(data) {
#Function to create a tidy data set using data.table package
require(data.table)
tidy <- data[, lapply(.SD,mean), by="subject,Activity_Label"]
return(tidy)
}
tidy <- makeTidy(data)
exit
exit()
q()
